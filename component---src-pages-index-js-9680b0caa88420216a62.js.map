{"version":3,"sources":["webpack://blog.farazshaikh.com/./src/components/Stories/Image.js","webpack://blog.farazshaikh.com/./src/components/Stories/PostLink.js","webpack://blog.farazshaikh.com/./src/pages/index.js"],"names":["Image","post","style","frontmatter","featuredImage","extension","src","publicURL","alt","G","image","childImageSharp","gatsbyImageData","PostLink","index","display","marginTop","className","to","slug","title","subtitle","date","fields","readingTime","text","backgroundColor","color","summary","edges","data","allMdx","location","Posts","map","edge","i","key","node","id","left","filter","_","right","is404","description","pathname"],"mappings":"uwBAGO,IAAMA,EAAQ,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC5B,OAAO,gCAAgD,QAA7CD,EAAKE,YAAYC,cAAcC,UAAsB,uBAAKC,IAAKL,EAAKE,YAAYC,cAAcG,UAAWC,IAAI,MAAMN,MAAK,KAAOA,KAAc,gBAAC,EAAAO,EAAD,CAAaP,MAAK,KAAOA,GAASQ,MAAOT,EAAKE,YAAYC,cAAcO,gBAAgBC,gBAAiBJ,IAAI,a,0HCAzPK,EAAW,SAAC,GAAqB,IAAnBZ,EAAkB,EAAlBA,KAAMa,EAAY,EAAZA,MAC/B,OACE,uBAAKZ,MAAO,CAAEa,QAAS,OAAQC,UAAW,QACxC,gBAAC,KAAD,CAAMC,UAAU,MAAMC,GAAIjB,EAAKE,YAAYgB,MACzC,0BAAQF,UAAU,SAChB,gBAACjB,EAAA,EAAD,CAAOC,KAAMA,KAEf,2BACE,sBAAIgB,UAAU,cAAchB,EAAKE,YAAYiB,OAC7C,sBAAIH,UAAU,4BAA4BhB,EAAKE,YAAYkB,UAC3D,wBAAMJ,UAAU,OAAOhB,EAAKE,YAAYmB,MACxC,wBAAML,UAAU,YAAYhB,EAAKsB,OAAOC,YAAYC,MACzC,IAAVX,EACC,wBAAMG,UAAU,WAAWf,MAAO,CAAEwB,gBAAiB,YAAaC,MAAO,UAAzE,UAIA,iCAEF,2BACA,2BACA,4BAAO1B,EAAKE,YAAYyB,aCYlC,EA9Bc,SAAC,GAKR,IAHOC,EAGR,EAJJC,KACEC,OAAUF,MAEZG,EACI,EADJA,SAEMC,EAAQJ,EAAMK,KAAI,SAACC,EAAMC,GAAP,OAAa,gBAACvB,EAAD,CAAUwB,IAAKF,EAAKG,KAAKC,GAAIzB,MAAOsB,EAAGnC,KAAMkC,EAAKG,UAEjFE,EAAOP,EAAMQ,QAAO,SAACC,EAAGN,GAAJ,OAAUA,EAAI,GAAM,KACxCO,EAAQV,EAAMQ,QAAO,SAACC,EAAGN,GAAJ,OAAUA,EAAI,GAAM,KAE/C,OACE,gBAAC,IAAD,CAASQ,OAAO,EAAOxB,MAAM,GAAGyB,YAAY,kEAAkEC,SAAUd,EAASc,UAC/H,uBAAKP,GAAG,UAAUtB,UAAU,qBAC1B,uBAAKA,UAAU,0BACb,2BACE,sBAAIA,UAAU,cAAd,WACA,sBAAIA,UAAU,sBAAd,qEAEDuB,GAGH,uBAAKvB,UAAU,0BAA0B0B,IAG3C,uBAAK1B,UAAU,0CAAf","file":"component---src-pages-index-js-9680b0caa88420216a62.js","sourcesContent":["import * as React from \"react\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nexport const Image = ({ post, style }) => {\n  return <>{post.frontmatter.featuredImage.extension === \"gif\" ? <img src={post.frontmatter.featuredImage.publicURL} alt=\"gif\" style={{ ...style }} /> : <GatsbyImage style={{ ...style }} image={post.frontmatter.featuredImage.childImageSharp.gatsbyImageData} alt=\"image\" />}</>;\n};\n","import { Link } from \"gatsby\";\nimport * as React from \"react\";\nimport { Image } from \"./Image\";\n\nexport const PostLink = ({ post, index }) => {\n  return (\n    <div style={{ display: \"flex\", marginTop: \"1em\" }}>\n      <Link className=\"box\" to={post.frontmatter.slug}>\n        <figure className=\"image\">\n          <Image post={post} />\n        </figure>\n        <div>\n          <h1 className=\"title is-4\">{post.frontmatter.title}</h1>\n          <h2 className=\"subtitle is-5 is-italic \">{post.frontmatter.subtitle}</h2>\n          <span className=\"tag\">{post.frontmatter.date}</span>\n          <span className=\"tag ml-1\">{post.fields.readingTime.text}</span>\n          {index === 0 ? (\n            <span className=\"tag ml-1\" style={{ backgroundColor: \"limegreen\", color: \"black\" }}>\n              Latest\n            </span>\n          ) : (\n            <></>\n          )}\n          <br />\n          <br />\n          <span>{post.frontmatter.summary}</span>\n        </div>\n      </Link>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport \"../styles/main.scss\";\nimport { graphql } from \"gatsby\";\nimport { Default } from \"../layouts/default\";\nimport { PostLink } from \"../components/Stories/PostLink\";\n\n// markup\nconst Index = ({\n  data: {\n    allMdx: { edges },\n  },\n  location,\n}) => {\n  const Posts = edges.map((edge, i) => <PostLink key={edge.node.id} index={i} post={edge.node} />);\n\n  const left = Posts.filter((_, i) => i % 2 === 0);\n  const right = Posts.filter((_, i) => i % 2 !== 0);\n\n  return (\n    <Default is404={false} title=\"\" description=\"A list of all my posts. Stuff I find cool, intresting, or both.\" pathname={location.pathname}>\n      <div id=\"stories\" className=\"columns is-mobile\">\n        <div className=\"column is-above-canvas\">\n          <div>\n            <h1 className=\"title is-2\">Stories</h1>\n            <h4 className=\"subtitle is-4 mt-1\">Sometimes I write about things I find cool, intresting, or both.</h4>\n          </div>\n          {left}\n        </div>\n\n        <div className=\"column is-above-canvas\">{right}</div>\n      </div>\n\n      <div className=\"has-text-centered is-6 is-above-canvas\">More coming soon...</div>\n    </Default>\n  );\n};\n\nexport default Index;\n\nexport const pageQuery = graphql`\n  query {\n    allMdx(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 260)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n            title\n            subtitle\n            summary\n            featuredImage {\n              childImageSharp {\n                gatsbyImageData(layout: FULL_WIDTH)\n              }\n              extension\n              publicURL\n            }\n          }\n          fields {\n            readingTime {\n              text\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}